<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class ProjectServiceContainer extends Container
{
    protected $parameters = [];
    protected $getService;

    public function __construct()
    {
        $this->getService = \Closure::fromCallable([$this, 'getService']);
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->methodMap = [
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\PasswordServiceBridgeInterface' => 'getPasswordServiceBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\RandomTokenGeneratorBridgeInterface' => 'getRandomTokenGeneratorBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Contact\\Form\\ContactFormBridgeInterface' => 'getContactFormBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Email\\EmailValidatorServiceBridgeInterface' => 'getEmailValidatorServiceBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\ProductRatingBridgeInterface' => 'getProductRatingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserRatingBridgeInterface' => 'getUserRatingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewAndRatingBridgeInterface' => 'getUserReviewAndRatingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewBridgeInterface' => 'getUserReviewBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Console\\ExecutorInterface' => 'getExecutorInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ProjectYamlImportServiceInterface' => 'getProjectYamlImportServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ShopStateServiceInterface' => 'getShopStateServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\DatabaseLoggerFactoryInterface' => 'getDatabaseLoggerFactoryInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface' => 'getQueryBuilderFactoryInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface' => 'getLoggerConfigurationValidatorInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleConfigurationDaoBridgeInterface' => 'getModuleConfigurationDaoBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleSettingBridgeInterface' => 'getModuleSettingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ShopConfigurationDaoBridgeInterface' => 'getShopConfigurationDaoBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ProjectConfigurationDaoInterface' => 'getProjectConfigurationDaoInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface' => 'getShopConfigurationDaoInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface' => 'getModuleConfigurationInstallerInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleFilesInstallerInterface' => 'getModuleFilesInstallerInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleInstallerInterface' => 'getModuleInstallerInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Bridge\\ClassExtensionChainBridgeInterface' => 'getClassExtensionChainBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Bridge\\ModuleActivationBridgeInterface' => 'getModuleActivationBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface' => 'getModuleStateServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\TemplateCacheServiceInterface' => 'getTemplateCacheServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererBridgeInterface' => 'getTemplateRendererBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererInterface' => 'getTemplateRendererInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface' => 'getAdminThemeBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface' => 'getBasicContextInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface' => 'getContextInterfaceService',
            'Psr\\Log\\LoggerInterface' => 'getLoggerInterfaceService',
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => 'getEventDispatcherInterfaceService',
            'console.command_loader' => 'getConsole_CommandLoaderService',
            'oxid_esales.console.symfony.component.console.application' => 'getOxidEsales_Console_Symfony_Component_Console_ApplicationService',
            'oxid_esales.module.install.service.bootstrap_module_installer' => 'getOxidEsales_Module_Install_Service_BootstrapModuleInstallerService',
            'oxid_esales.module.install.service.installed_shop_project_configuration_generator' => 'getOxidEsales_Module_Install_Service_InstalledShopProjectConfigurationGeneratorService',
            'oxid_esales.module.install.service.launched_shop_project_configuration_generator' => 'getOxidEsales_Module_Install_Service_LaunchedShopProjectConfigurationGeneratorService',
            'oxid_esales.symfony.file_system' => 'getOxidEsales_Symfony_FileSystemService',
            'oxid_esales.templating.admin.navigation.file.locator' => 'getOxidEsales_Templating_Admin_Navigation_File_LocatorService',
            'oxid_esales.templating.admin.template.loader' => 'getOxidEsales_Templating_Admin_Template_LoaderService',
            'oxid_esales.templating.template.loader' => 'getOxidEsales_Templating_Template_LoaderService',
        ];

        $this->aliases = [];
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return [
            '.service_locator.McUtmhr' => true,
            '.service_locator.u61nMlx' => true,
            'Doctrine\\DBAL\\Connection' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Container\\Event\\ConfigurationChangedEventSubscriber' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Generator\\RandomTokenGeneratorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Policy\\PasswordPolicyInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Service\\PasswordHashServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Service\\PasswordVerificationServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Contact\\Form\\ContactFormMessageBuilderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Email\\EmailValidatorServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\ProductRatingDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\ReviewDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\DataMapper\\ProductRatingDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\DataMapper\\RatingDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\DataMapper\\ReviewDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\ProductRatingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\RatingCalculatorServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\ReviewAndRatingMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserRatingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserReviewAndRatingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserReviewServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Dao\\ShopConfigurationSettingDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Utility\\ShopSettingEncoderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ContainerCacheInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\NullLogger' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\QueryFilterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\QueryLogger' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\TransactionServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\FinderFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Configuration\\MonologConfigurationInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Factory\\LoggerFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleConfigurationCommand' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\UninstallModuleConfigurationCommand' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Cache\\ShopConfigurationCacheInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationExtenderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentConfigurationDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentMisconfigurationEventSubscriber' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\DataMapper\\ModuleConfigurationDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\DataMapper\\ProjectConfigurationDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\DataMapper\\ShopConfigurationDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Definition\\TreeBuilderFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Service\\ModuleClassExtensionsMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Service\\ModuleConfigurationMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Service\\SettingsMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Converter\\MetaDataConverterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataNormalizerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataSchemataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\DataMapper\\MetaDataToModuleConfigurationDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Validator\\MetaDataSchemaValidatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Validator\\MetaDataValidatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setting\\SettingDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleConfigurationHandlingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleServicesActivationServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\TemplateExtension\\TemplateBlockExtensionDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Bridge\\SmartyEngineBridgeInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Configuration\\SmartyConfigurationFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Configuration\\SmartyConfigurationInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Configuration\\SmartyPluginsDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Configuration\\SmartyPrefiltersDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Configuration\\SmartyResourcesDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Configuration\\SmartySecuritySettingsDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\Configuration\\SmartySettingsDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Smarty\\SmartyContextInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\SystemRequirements\\SystemSecurityCheckerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\AdminTemplateFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionMenuFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionUserFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\TemplateFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateNameResolver' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateNameResolverInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateEngineInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\AddUrlParametersLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\AssignAdvancedLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\ContentFactory' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\DateFormatHelper' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FileSizeLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatCurrencyLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatDateLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatPriceLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatTimeLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\IfContentLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\IncludeDynamicLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\IncludeWidgetLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\InputHelpLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\InsertNewBasketItemLogicSmarty' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\InsertNewBasketItemLogicTwig' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\ScriptLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\SeoUrlLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\SmartWordwrapLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\StyleLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TranslateFilterLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TranslateFunctionLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TranslateSalutationLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TruncateLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\WordwrapLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\FallbackTokenGenerator' => true,
            'OxidEsales\\Eshop\\Core\\Config' => true,
            'OxidEsales\\Eshop\\Core\\UtilsView' => true,
            'Psr\\Container\\ContainerInterface' => true,
            'Symfony\\Component\\DependencyInjection\\ContainerInterface' => true,
            'common.form.required_fields_validator' => true,
            'database.logger.admin_monolog_configuration' => true,
            'database.monolog_logger_factory' => true,
            'database.psr_logger' => true,
            'form.contact_form.contact_form_configuration' => true,
            'form.contact_form.contact_form_configuration_factory' => true,
            'form.contact_form.contact_form_email_validator' => true,
            'form.contact_form.contact_form_factory' => true,
            'form.contact_form.contact_form_fields_configuration_data_provider' => true,
            'oxid_esales.command.apply_modules_configuration_command' => true,
            'oxid_esales.command.clearcache_command' => true,
            'oxid_esales.command.module_activate_command' => true,
            'oxid_esales.command.module_deactivate_command' => true,
            'oxid_esales.common.file_locator' => true,
            'oxid_esales.common.storage.flock_store' => true,
            'oxid_esales.common.storage.flock_store_lock_factory' => true,
            'oxid_esales.console.commands_provider.services_commands_provider' => true,
            'oxid_esales.module.cache.invalidate_module_cache_event_subscriber' => true,
            'oxid_esales.module.configuration.class_extensions_data_mapper' => true,
            'oxid_esales.module.configuration.classses_without_namespace_data_mapper' => true,
            'oxid_esales.module.configuration.controllers_data_mapper' => true,
            'oxid_esales.module.configuration.events_data_mapper' => true,
            'oxid_esales.module.configuration.module_settings_data_mapper' => true,
            'oxid_esales.module.configuration.node' => true,
            'oxid_esales.module.configuration.smarty_plugin_directories_data_mapper' => true,
            'oxid_esales.module.configuration.template_blocks_data_mapper' => true,
            'oxid_esales.module.configuration.templates_data_mapper' => true,
            'oxid_esales.module.meta_data.converter.shop_module_settings_boolean_converter' => true,
            'oxid_esales.module.meta_data.validator.module_id_validator' => true,
            'oxid_esales.module.meta_data.validator.shop_module_setting_boolean_validator' => true,
            'oxid_esales.module.metadata.datamapper.metadatamapper' => true,
            'oxid_esales.module.setup.class_extension_chain_service' => true,
            'oxid_esales.module.setup.controllers_module_setting_handler' => true,
            'oxid_esales.module.setup.events_module_setting_handler' => true,
            'oxid_esales.module.setup.files_without_namespace_module_setting_handler' => true,
            'oxid_esales.module.setup.path_module_setting_handler' => true,
            'oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber' => true,
            'oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber' => true,
            'oxid_esales.module.setup.shop_configuration_class_extension_handler' => true,
            'oxid_esales.module.setup.shop_module_setting_module_setting_handler' => true,
            'oxid_esales.module.setup.smarty_plugin_directories_module_setting_handler' => true,
            'oxid_esales.module.setup.template_blocks_module_setting_handler' => true,
            'oxid_esales.module.setup.templates_module_setting_handler' => true,
            'oxid_esales.module.setup.validator.class_extensions_module_setting_validator' => true,
            'oxid_esales.module.setup.validator.controllers_module_setting_validator' => true,
            'oxid_esales.module.setup.validator.events_module_setting_validator' => true,
            'oxid_esales.module.setup.validator.services_yaml_validator' => true,
            'oxid_esales.module.setup.validator.smarty_plugin_directories_module_setting_validator' => true,
            'oxid_esales.module.setup.version_module_setting_handler' => true,
            'oxid_esales.monolog.logger' => true,
            'smarty.smarty_engine_factory' => true,
            'utility.context.admin_log_file_path' => true,
            'utility.context.log_file_path' => true,
            'utility.context.log_level' => true,
        ];
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\PasswordServiceBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\PasswordServiceBridge
     */
    protected function getPasswordServiceBridgeInterfaceService()
    {
        $a = new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Policy\PasswordPolicy();

        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\PasswordServiceBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\PasswordServiceBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Service\BcryptPasswordHashService($a, 10), new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Service\PasswordVerificationService($a));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\RandomTokenGeneratorBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\RandomTokenGeneratorBridge
     */
    protected function getRandomTokenGeneratorBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\RandomTokenGeneratorBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\RandomTokenGeneratorBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Generator\RandomTokenGenerator(), new \OxidEsales\EshopCommunity\Internal\Framework\SystemRequirements\SystemSecurityChecker(), new \OxidEsales\EshopCommunity\Internal\Transition\Utility\FallbackTokenGenerator(), ($this->services['Psr\\Log\\LoggerInterface'] ?? $this->getLoggerInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormBridge
     */
    protected function getContactFormBridgeInterfaceService()
    {
        $a = $this->getForm_ContactForm_ContactFormConfigurationService();
        $b = ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter()));

        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Contact\\Form\\ContactFormBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormFactory($a, new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormEmailValidator($b), new \OxidEsales\EshopCommunity\Internal\Framework\Form\RequiredFieldsValidator()), new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormMessageBuilder($b), $a);
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Email\EmailValidatorServiceBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Email\EmailValidatorServiceBridge
     */
    protected function getEmailValidatorServiceBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Email\\EmailValidatorServiceBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Email\EmailValidatorServiceBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Email\EmailValidatorService());
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\ProductRatingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\ProductRatingBridge
     */
    protected function getProductRatingBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\ProductRatingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\ProductRatingBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\ProductRatingService(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface'] ?? $this->getRatingDaoInterfaceService()), new \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\ProductRatingDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? $this->getQueryBuilderFactoryInterfaceService()), new \OxidEsales\EshopCommunity\Internal\Domain\Review\DataMapper\ProductRatingDataMapper()), new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\RatingCalculatorService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserRatingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserRatingBridge
     */
    protected function getUserRatingBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserRatingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserRatingBridge(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserRatingServiceInterface'] ?? $this->getUserRatingServiceInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewAndRatingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewAndRatingBridge
     */
    protected function getUserReviewAndRatingBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewAndRatingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewAndRatingBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserReviewAndRatingService(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserReviewServiceInterface'] ?? $this->getUserReviewServiceInterfaceService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserRatingServiceInterface'] ?? $this->getUserRatingServiceInterfaceService()), new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\ReviewAndRatingMergingService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewBridge
     */
    protected function getUserReviewBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewBridge(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserReviewServiceInterface'] ?? $this->getUserReviewServiceInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Console\ExecutorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Console\Executor
     */
    protected function getExecutorInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Console\\ExecutorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Console\Executor(($this->services['oxid_esales.console.symfony.component.console.application'] ?? ($this->services['oxid_esales.console.symfony.component.console.application'] = new \Symfony\Component\Console\Application())), new \OxidEsales\EshopCommunity\Internal\Framework\Console\CommandsProvider\ServicesCommandsProvider($this));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ProjectYamlImportServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ProjectYamlImportService
     */
    protected function getProjectYamlImportServiceInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ProjectYamlImportServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ProjectYamlImportService(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface'] ?? $this->getProjectYamlDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ShopStateServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ShopStateService
     */
    protected function getShopStateServiceInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ShopStateServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ShopStateService(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), '\\OxidEsales\\Eshop\\Core\\Registry');
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactoryInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactory
     */
    protected function getDatabaseLoggerFactoryInterfaceService()
    {
        $a = ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()));

        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\DatabaseLoggerFactoryInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactory($a, new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryLogger(new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryFilter(), $a, (new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Factory\MonologLoggerFactory(new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Configuration\MonologConfiguration('OXID Admin Logger', $this->getUtility_Context_AdminLogFilePathService(), 'debug'), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator()))))->create()), new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\NullLogger());
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Database\QueryBuilderFactoryInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Database\QueryBuilderFactory
     */
    protected function getQueryBuilderFactoryInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Database\QueryBuilderFactory(($this->privates['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\LoggerConfigurationValidatorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator
     */
    protected function getLoggerConfigurationValidatorInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleConfigurationDaoBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleConfigurationDaoBridge
     */
    protected function getModuleConfigurationDaoBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleConfigurationDaoBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleConfigurationDaoBridge(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? $this->getModuleConfigurationDaoInterfaceService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentConfigurationDaoInterface'] ?? $this->getShopEnvironmentConfigurationDaoInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleSettingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleSettingBridge
     */
    protected function getModuleSettingBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleSettingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleSettingBridge(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? $this->getModuleConfigurationDaoInterfaceService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setting\\SettingDaoInterface'] ?? $this->getSettingDaoInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ShopConfigurationDaoBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ShopConfigurationDaoBridge
     */
    protected function getShopConfigurationDaoBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ShopConfigurationDaoBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ShopConfigurationDaoBridge(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentConfigurationDaoInterface'] ?? $this->getShopEnvironmentConfigurationDaoInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ProjectConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ProjectConfigurationDao
     */
    protected function getProjectConfigurationDaoInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ProjectConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ProjectConfigurationDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopConfigurationDao
     */
    protected function getShopConfigurationDaoInterfaceService()
    {
        $a = ($this->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? $this->getEventDispatcherInterfaceService());

        if (isset($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'])) {
            return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'];
        }

        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopConfigurationDao(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ShopConfigurationDataMapper(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfigurationDataMapper($this->getOxidEsales_Module_Configuration_ClasssesWithoutNamespaceDataMapperService(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ClassExtensionsDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ControllersDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\EventsDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ModuleSettingsDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\SmartyPluginDirectoriesDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\TemplateBlocksDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\TemplatesDataMapper())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface'] ?? $this->getFileStorageFactoryInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Cache\ClassPropertyShopConfigurationCache(), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())), ($this->privates['oxid_esales.module.configuration.node'] ?? $this->getOxidEsales_Module_Configuration_NodeService()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentConfigurationExtender(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentConfigurationDaoInterface'] ?? $this->getShopEnvironmentConfigurationDaoInterfaceService()), $a));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleConfigurationInstallerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleConfigurationInstaller
     */
    protected function getModuleConfigurationInstallerInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleConfigurationInstaller(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ProjectConfigurationDaoInterface'] ?? $this->getProjectConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Service\ModuleConfigurationMergingService(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Service\SettingsMergingService(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Service\ModuleClassExtensionsMergingService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface'] ?? $this->getModuleConfigurationDaoInterface2Service()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleFilesInstallerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleFilesInstaller
     */
    protected function getModuleFilesInstallerInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleFilesInstallerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleFilesInstaller(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())), new \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\FinderFactory());
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleInstallerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleInstaller
     */
    protected function getModuleInstallerInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleInstallerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleInstaller(($this->services['oxid_esales.module.install.service.bootstrap_module_installer'] ?? $this->getOxidEsales_Module_Install_Service_BootstrapModuleInstallerService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? $this->getModuleActivationServiceInterfaceService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface'] ?? $this->getModuleConfigurationDaoInterface2Service()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? $this->getModuleStateServiceInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ClassExtensionChainBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ClassExtensionChainBridge
     */
    protected function getClassExtensionChainBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Bridge\\ClassExtensionChainBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ClassExtensionChainBridge(($this->privates['oxid_esales.module.setup.class_extension_chain_service'] ?? $this->getOxidEsales_Module_Setup_ClassExtensionChainServiceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ModuleActivationBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ModuleActivationBridge
     */
    protected function getModuleActivationBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Bridge\\ModuleActivationBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ModuleActivationBridge(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? $this->getModuleActivationServiceInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? $this->getModuleStateServiceInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\State\ModuleStateServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\State\ModuleStateService
     */
    protected function getModuleStateServiceInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\State\ModuleStateService(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Dao\\ShopConfigurationSettingDaoInterface'] ?? $this->getShopConfigurationSettingDaoInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Cache\TemplateCacheServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Cache\TemplateCacheService
     */
    protected function getTemplateCacheServiceInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\TemplateCacheServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Cache\TemplateCacheService(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRendererBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Smarty\Bridge\SmartyTemplateRendererBridge
     */
    protected function getTemplateRendererBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Smarty\Bridge\SmartyTemplateRendererBridge(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererInterface'] ?? $this->getTemplateRendererInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRendererInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRenderer
     */
    protected function getTemplateRendererInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRenderer(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateEngineInterface'] ?? $this->getTemplateEngineInterfaceService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge
     */
    protected function getAdminThemeBridgeInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge('admin');
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContextInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext
     */
    protected function getBasicContextInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context
     */
    protected function getContextInterfaceService()
    {
        return $this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context();
    }

    /**
     * Gets the public 'Psr\Log\LoggerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Logger\Wrapper\LoggerWrapper
     */
    protected function getLoggerInterfaceService()
    {
        return $this->services['Psr\\Log\\LoggerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Wrapper\LoggerWrapper((new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Factory\MonologLoggerFactory(new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Configuration\MonologConfiguration('OXID Logger', $this->getUtility_Context_LogFilePathService(), $this->getUtility_Context_LogLevelService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator()))))->create());
    }

    /**
     * Gets the public 'Symfony\Component\EventDispatcher\EventDispatcherInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Event\ShopAwareEventDispatcher
     */
    protected function getEventDispatcherInterfaceService()
    {
        $this->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Event\ShopAwareEventDispatcher();

        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Event\\ProjectYamlChangedEvent', [0 => function () {
            return ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Container\\Event\\ConfigurationChangedEventSubscriber'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Container\\Event\\ConfigurationChangedEventSubscriber'] = new \OxidEsales\EshopCommunity\Internal\Container\Event\ConfigurationChangedEventSubscriber()));
        }, 1 => 'resetContainer'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentWithOrphanSettingEvent', [0 => function () {
            return ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentMisconfigurationEventSubscriber'] ?? $this->getShopEnvironmentMisconfigurationEventSubscriberService());
        }, 1 => 'logOrphanSetting'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\FinalizingModuleActivationEvent', [0 => function () {
            return ($this->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'] ?? $this->getOxidEsales_Module_Setup_Service_Eventsubscriber_DispatchLegacyEventsSubscriberService());
        }, 1 => 'executeMetadataOnActivationEvent'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\BeforeModuleDeactivationEvent', [0 => function () {
            return ($this->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'] ?? $this->getOxidEsales_Module_Setup_Service_Eventsubscriber_DispatchLegacyEventsSubscriberService());
        }, 1 => 'executeMetadataOnDeactivationEvent'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\ServicesYamlConfigurationErrorEvent', [0 => function () {
            return ($this->privates['oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber'] ?? $this->getOxidEsales_Module_Setup_Service_Eventsubscriber_EventLoggingSubscriberService());
        }, 1 => 'logConfigurationError'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\FinalizingModuleActivationEvent', [0 => function () {
            return ($this->privates['oxid_esales.module.cache.invalidate_module_cache_event_subscriber'] ?? $this->getOxidEsales_Module_Cache_InvalidateModuleCacheEventSubscriberService());
        }, 1 => 'invalidateModuleCache'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\FinalizingModuleDeactivationEvent', [0 => function () {
            return ($this->privates['oxid_esales.module.cache.invalidate_module_cache_event_subscriber'] ?? $this->getOxidEsales_Module_Cache_InvalidateModuleCacheEventSubscriberService());
        }, 1 => 'invalidateModuleCache'], 0);

        return $instance;
    }

    /**
     * Gets the public 'console.command_loader' shared service.
     *
     * @return \Symfony\Component\Console\CommandLoader\ContainerCommandLoader
     */
    protected function getConsole_CommandLoaderService()
    {
        return $this->services['console.command_loader'] = new \Symfony\Component\Console\CommandLoader\ContainerCommandLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleConfigurationCommand' => ['privates', 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleConfigurationCommand', 'getInstallModuleConfigurationCommandService', false],
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\UninstallModuleConfigurationCommand' => ['privates', 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\UninstallModuleConfigurationCommand', 'getUninstallModuleConfigurationCommandService', false],
            'oxid_esales.command.apply_modules_configuration_command' => ['privates', 'oxid_esales.command.apply_modules_configuration_command', 'getOxidEsales_Command_ApplyModulesConfigurationCommandService', false],
            'oxid_esales.command.clearcache_command' => ['privates', 'oxid_esales.command.clearcache_command', 'getOxidEsales_Command_ClearcacheCommandService', false],
            'oxid_esales.command.module_activate_command' => ['privates', 'oxid_esales.command.module_activate_command', 'getOxidEsales_Command_ModuleActivateCommandService', false],
            'oxid_esales.command.module_deactivate_command' => ['privates', 'oxid_esales.command.module_deactivate_command', 'getOxidEsales_Command_ModuleDeactivateCommandService', false],
        ], [
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleConfigurationCommand' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleConfigurationCommand',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\UninstallModuleConfigurationCommand' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\UninstallModuleConfigurationCommand',
            'oxid_esales.command.apply_modules_configuration_command' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ApplyModulesConfigurationCommand',
            'oxid_esales.command.clearcache_command' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Cache\\Command\\ClearCacheCommand',
            'oxid_esales.command.module_activate_command' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleActivateCommand',
            'oxid_esales.command.module_deactivate_command' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleDeactivateCommand',
        ]), ['oe:cache:clear' => 'oxid_esales.command.clearcache_command', 'oe:module:activate' => 'oxid_esales.command.module_activate_command', 'oe:module:deactivate' => 'oxid_esales.command.module_deactivate_command', 'oe:module:install-configuration' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleConfigurationCommand', 'oe:module:uninstall-configuration' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\UninstallModuleConfigurationCommand', 'oe:module:apply-configuration' => 'oxid_esales.command.apply_modules_configuration_command']);
    }

    /**
     * Gets the public 'oxid_esales.console.symfony.component.console.application' shared autowired service.
     *
     * @return \Symfony\Component\Console\Application
     */
    protected function getOxidEsales_Console_Symfony_Component_Console_ApplicationService()
    {
        return $this->services['oxid_esales.console.symfony.component.console.application'] = new \Symfony\Component\Console\Application();
    }

    /**
     * Gets the public 'oxid_esales.module.install.service.bootstrap_module_installer' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\BootstrapModuleInstaller
     */
    protected function getOxidEsales_Module_Install_Service_BootstrapModuleInstallerService()
    {
        return $this->services['oxid_esales.module.install.service.bootstrap_module_installer'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\BootstrapModuleInstaller(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleFilesInstallerInterface'] ?? $this->getModuleFilesInstallerInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface'] ?? $this->getModuleConfigurationInstallerInterfaceService()));
    }

    /**
     * Gets the public 'oxid_esales.module.install.service.installed_shop_project_configuration_generator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator
     */
    protected function getOxidEsales_Module_Install_Service_InstalledShopProjectConfigurationGeneratorService()
    {
        return $this->services['oxid_esales.module.install.service.installed_shop_project_configuration_generator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ProjectConfigurationDaoInterface'] ?? $this->getProjectConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())));
    }

    /**
     * Gets the public 'oxid_esales.module.install.service.launched_shop_project_configuration_generator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator
     */
    protected function getOxidEsales_Module_Install_Service_LaunchedShopProjectConfigurationGeneratorService()
    {
        return $this->services['oxid_esales.module.install.service.launched_shop_project_configuration_generator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ProjectConfigurationDaoInterface'] ?? $this->getProjectConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())));
    }

    /**
     * Gets the public 'oxid_esales.symfony.file_system' shared autowired service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem
     */
    protected function getOxidEsales_Symfony_FileSystemService()
    {
        return $this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the public 'oxid_esales.templating.admin.navigation.file.locator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\AdminNavigationFileLocator
     */
    protected function getOxidEsales_Templating_Admin_Navigation_File_LocatorService()
    {
        return $this->services['oxid_esales.templating.admin.navigation.file.locator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\AdminNavigationFileLocator(new RewindableGenerator(function () {
            yield 0 => ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionUserFileLocator'] ?? $this->getEditionUserFileLocatorService());
            yield 1 => ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionMenuFileLocator'] ?? $this->getEditionMenuFileLocatorService());
        }, 2));
    }

    /**
     * Gets the public 'oxid_esales.templating.admin.template.loader' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Loader\TemplateLoader
     */
    protected function getOxidEsales_Templating_Admin_Template_LoaderService()
    {
        return $this->services['oxid_esales.templating.admin.template.loader'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Loader\TemplateLoader(new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\AdminTemplateFileLocator(($this->privates['OxidEsales\\Eshop\\Core\\Config'] ?? $this->getConfigService())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateNameResolverInterface'] ?? $this->getTemplateNameResolverInterfaceService()));
    }

    /**
     * Gets the public 'oxid_esales.templating.template.loader' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Loader\TemplateLoader
     */
    protected function getOxidEsales_Templating_Template_LoaderService()
    {
        return $this->services['oxid_esales.templating.template.loader'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Loader\TemplateLoader(new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\TemplateFileLocator(($this->privates['OxidEsales\\Eshop\\Core\\Config'] ?? $this->getConfigService())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateNameResolverInterface'] ?? $this->getTemplateNameResolverInterfaceService()));
    }

    /**
     * Gets the private 'Doctrine\DBAL\Connection' shared autowired service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    protected function getConnectionService()
    {
        return $this->privates['Doctrine\\DBAL\\Connection'] = \OxidEsales\EshopCommunity\Internal\Framework\Database\ConnectionFactory::get();
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\RatingDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\RatingDao
     */
    protected function getRatingDaoInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\RatingDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? $this->getQueryBuilderFactoryInterfaceService()), new \OxidEsales\EshopCommunity\Internal\Domain\Review\DataMapper\RatingDataMapper());
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserRatingServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserRatingService
     */
    protected function getUserRatingServiceInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserRatingServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserRatingService(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface'] ?? $this->getRatingDaoInterfaceService()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserReviewServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserReviewService
     */
    protected function getUserReviewServiceInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserReviewServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserReviewService(new \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\ReviewDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? $this->getQueryBuilderFactoryInterfaceService()), new \OxidEsales\EshopCommunity\Internal\Domain\Review\DataMapper\ReviewDataMapper()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Config\Dao\ShopConfigurationSettingDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Config\Dao\ShopConfigurationSettingDao
     */
    protected function getShopConfigurationSettingDaoInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Dao\\ShopConfigurationSettingDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Config\Dao\ShopConfigurationSettingDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? $this->getQueryBuilderFactoryInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Utility\\ShopSettingEncoderInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Utility\\ShopSettingEncoderInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Config\Utility\ShopSettingEncoder())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter())), ($this->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? $this->getEventDispatcherInterfaceService()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Dao\ProjectYamlDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Dao\ContainerAwareProjectYamlDao
     */
    protected function getProjectYamlDaoInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Dao\ContainerAwareProjectYamlDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), ($this->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? $this->getEventDispatcherInterfaceService()), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Command\InstallModuleConfigurationCommand' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\InstallModuleConfigurationCommand
     */
    protected function getInstallModuleConfigurationCommandService()
    {
        $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleConfigurationCommand'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\InstallModuleConfigurationCommand(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface'] ?? $this->getModuleConfigurationInstallerInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())));

        $instance->setName('oe:module:install-configuration');

        return $instance;
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Command\UninstallModuleConfigurationCommand' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\UninstallModuleConfigurationCommand
     */
    protected function getUninstallModuleConfigurationCommandService()
    {
        $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\UninstallModuleConfigurationCommand'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\UninstallModuleConfigurationCommand(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface'] ?? $this->getModuleConfigurationInstallerInterfaceService()));

        $instance->setName('oe:module:uninstall-configuration');

        return $instance;
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleConfigurationDao
     */
    protected function getModuleConfigurationDaoInterfaceService()
    {
        $a = ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService());

        if (isset($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'])) {
            return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'];
        }

        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleConfigurationDao($a);
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentConfigurationDao
     */
    protected function getShopEnvironmentConfigurationDaoInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentConfigurationDao(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface'] ?? $this->getFileStorageFactoryInterfaceService()), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())), ($this->privates['oxid_esales.module.configuration.node'] ?? $this->getOxidEsales_Module_Configuration_NodeService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentMisconfigurationEventSubscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentMisconfigurationEventSubscriber
     */
    protected function getShopEnvironmentMisconfigurationEventSubscriberService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentMisconfigurationEventSubscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentMisconfigurationEventSubscriber(($this->services['Psr\\Log\\LoggerInterface'] ?? $this->getLoggerInterfaceService()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProviderInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProvider
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProviderInterface" service is deprecated.
     */
    protected function getMetaDataSchemataProviderInterfaceService()
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataSchemataProviderInterface" service is deprecated.');

        return new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProvider($this->parameters['oxid_esales.module.metadata.service.metadata_schemata']);
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\ModuleConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\ModuleConfigurationDao
     */
    protected function getModuleConfigurationDaoInterface2Service()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\ModuleConfigurationDao(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataProvider(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataNormalizer(), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataValidatorAggregate(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\ModuleIdValidator(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\ModuleSettingBooleanValidator()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Converter\MetaDataConverterAggregate(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Converter\ModuleSettingsBooleanConverter())), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\DataMapper\MetaDataMapper($this->getMetaDataSchemaValidatorInterfaceService()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidatorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidator
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidatorInterface" service is deprecated.
     */
    protected function getMetaDataSchemaValidatorInterfaceService()
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Validator\\MetaDataSchemaValidatorInterface" service is deprecated.');

        return new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidator($this->getMetaDataSchemataProviderInterfaceService());
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Setting\SettingDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setting\SettingDao
     */
    protected function getSettingDaoInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setting\\SettingDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setting\SettingDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? $this->getQueryBuilderFactoryInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Utility\\ShopSettingEncoderInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Utility\\ShopSettingEncoderInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Config\Utility\ShopSettingEncoder())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter())), new \OxidEsales\EshopCommunity\Internal\Framework\Database\TransactionService(($this->privates['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())), ($this->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? $this->getEventDispatcherInterfaceService()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleActivationServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleActivationService
     */
    protected function getModuleActivationServiceInterfaceService()
    {
        $a = ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? $this->getModuleConfigurationDaoInterfaceService());
        $b = ($this->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? $this->getEventDispatcherInterfaceService());
        $c = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleConfigurationHandlingService();

        $d = ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Dao\\ShopConfigurationSettingDaoInterface'] ?? $this->getShopConfigurationSettingDaoInterfaceService());
        $e = ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter()));
        $f = ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()));

        $g = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModulePathResolver($a, $f);
        $h = ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface'] ?? $this->getProjectYamlDaoInterfaceService());

        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\ModulePathHandler($d));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\ModuleVersionHandler($d));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\TemplatesModuleSettingHandler($d));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\ControllersModuleSettingHandler($d));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\ShopConfigurationSmartyPluginDirectoryHandler($d));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\ShopConfigurationClassExtensionsHandler($d));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\TemplateBlockModuleSettingHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\TemplateExtension\TemplateBlockExtensionDao(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? $this->getQueryBuilderFactoryInterfaceService()), $e)));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\SettingModuleSettingHandler(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setting\\SettingDaoInterface'] ?? $this->getSettingDaoInterfaceService())));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\ShopConfigurationEventsHandler($d));
        $c->addHandler(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Handler\ShopConfigurationClassesWithoutNamespaceHandler($d));
        $c->addValidator(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\ControllersValidator($e, $d, ($this->services['Psr\\Log\\LoggerInterface'] ?? $this->getLoggerInterfaceService())));
        $c->addValidator(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\SmartyPluginDirectoriesValidator($g));
        $c->addValidator(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\ClassExtensionsValidator($e));
        $c->addValidator(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\EventsValidator($e));
        $c->addValidator(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\ServicesYamlValidator($f, $h));
        $i = ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? $this->getModuleStateServiceInterfaceService());

        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleActivationService($a, $b, $c, $i, ($this->privates['oxid_esales.module.setup.class_extension_chain_service'] ?? $this->getOxidEsales_Module_Setup_ClassExtensionChainServiceService()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleServicesActivationService($h, $b, $g, $i, ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()))));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Storage\FileStorageFactoryInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Storage\YamlFileStorageFactory
     */
    protected function getFileStorageFactoryInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Storage\YamlFileStorageFactory(new \Symfony\Component\Config\FileLocator(), new \Symfony\Component\Lock\LockFactory(new \Symfony\Component\Lock\Store\FlockStore()), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionMenuFileLocator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionMenuFileLocator
     */
    protected function getEditionMenuFileLocatorService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionMenuFileLocator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionMenuFileLocator(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge('admin'))), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionUserFileLocator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionUserFileLocator
     */
    protected function getEditionUserFileLocatorService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionUserFileLocator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionUserFileLocator(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge('admin'))), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), ($this->services['oxid_esales.symfony.file_system'] ?? ($this->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\TemplateNameResolverInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\LegacyTemplateNameResolver
     */
    protected function getTemplateNameResolverInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateNameResolverInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\LegacyTemplateNameResolver(new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\TemplateNameResolver(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateEngineInterface'] ?? $this->getTemplateEngineInterfaceService())));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateEngineInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Smarty\Legacy\LegacySmartyEngine
     */
    protected function getTemplateEngineInterfaceService()
    {
        return $this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateEngineInterface'] = (new \OxidEsales\EshopCommunity\Internal\Framework\Smarty\Legacy\LegacySmartyEngineFactory(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter())), new \OxidEsales\EshopCommunity\Internal\Framework\Smarty\Bridge\SmartyEngineBridge()))->getTemplateEngine();
    }

    /**
     * Gets the private 'OxidEsales\Eshop\Core\Config' shared autowired service.
     *
     * @return \OxidEsales\Eshop\Core\Config
     */
    protected function getConfigService()
    {
        return $this->privates['OxidEsales\\Eshop\\Core\\Config'] = \OxidEsales\Eshop\Core\Registry::getConfig();
    }

    /**
     * Gets the private 'form.contact_form.contact_form_configuration' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\FormConfiguration\FormConfiguration
     */
    protected function getForm_ContactForm_ContactFormConfigurationService()
    {
        return (new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormConfigurationFactory(new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormFieldsConfigurationDataProvider(), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()))))->getFormConfiguration();
    }

    /**
     * Gets the private 'oxid_esales.command.apply_modules_configuration_command' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ApplyModulesConfigurationCommand
     */
    protected function getOxidEsales_Command_ApplyModulesConfigurationCommandService()
    {
        $this->privates['oxid_esales.command.apply_modules_configuration_command'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ApplyModulesConfigurationCommand(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService()), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? $this->getModuleActivationServiceInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? $this->getModuleStateServiceInterfaceService()));

        $instance->setName('oe:module:apply-configuration');

        return $instance;
    }

    /**
     * Gets the private 'oxid_esales.command.clearcache_command' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Cache\Command\ClearCacheCommand
     */
    protected function getOxidEsales_Command_ClearcacheCommandService()
    {
        $this->privates['oxid_esales.command.clearcache_command'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Cache\Command\ClearCacheCommand(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter())), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\TemplateCacheServiceInterface'] ?? $this->getTemplateCacheServiceInterfaceService()), new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\FilesystemContainerCache(($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()))));

        $instance->setName('oe:cache:clear');

        return $instance;
    }

    /**
     * Gets the private 'oxid_esales.command.module_activate_command' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleActivateCommand
     */
    protected function getOxidEsales_Command_ModuleActivateCommandService()
    {
        $this->privates['oxid_esales.command.module_activate_command'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleActivateCommand(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? $this->getModuleActivationServiceInterfaceService()));

        $instance->setName('oe:module:activate');

        return $instance;
    }

    /**
     * Gets the private 'oxid_esales.command.module_deactivate_command' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleDeactivateCommand
     */
    protected function getOxidEsales_Command_ModuleDeactivateCommandService()
    {
        $this->privates['oxid_esales.command.module_deactivate_command'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleDeactivateCommand(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? $this->getModuleActivationServiceInterfaceService()));

        $instance->setName('oe:module:deactivate');

        return $instance;
    }

    /**
     * Gets the private 'oxid_esales.module.cache.invalidate_module_cache_event_subscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\InvalidateModuleCacheEventSubscriber
     */
    protected function getOxidEsales_Module_Cache_InvalidateModuleCacheEventSubscriberService()
    {
        return $this->privates['oxid_esales.module.cache.invalidate_module_cache_event_subscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\InvalidateModuleCacheEventSubscriber(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\ShopModuleCacheService(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter())), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\TemplateCacheServiceInterface'] ?? $this->getTemplateCacheServiceInterfaceService())));
    }

    /**
     * Gets the private 'oxid_esales.module.configuration.classses_without_namespace_data_mapper' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ClassesWithoutNamespaceDataMapper
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "oxid_esales.module.configuration.classses_without_namespace_data_mapper" service is deprecated.
     */
    protected function getOxidEsales_Module_Configuration_ClasssesWithoutNamespaceDataMapperService()
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "oxid_esales.module.configuration.classses_without_namespace_data_mapper" service is deprecated.');

        return new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ClassesWithoutNamespaceDataMapper();
    }

    /**
     * Gets the private 'oxid_esales.module.configuration.node' shared autowired service.
     *
     * @return \Symfony\Component\Config\Definition\NodeInterface
     */
    protected function getOxidEsales_Module_Configuration_NodeService()
    {
        return $this->privates['oxid_esales.module.configuration.node'] = (new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Definition\TreeBuilderFactory())->create();
    }

    /**
     * Gets the private 'oxid_esales.module.setup.class_extension_chain_service' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ClassExtensionChainService
     */
    protected function getOxidEsales_Module_Setup_ClassExtensionChainServiceService()
    {
        return $this->privates['oxid_esales.module.setup.class_extension_chain_service'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ClassExtensionChainService(($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Dao\\ShopConfigurationSettingDaoInterface'] ?? $this->getShopConfigurationSettingDaoInterfaceService()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ActiveClassExtensionChainResolver(($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? $this->getShopConfigurationDaoInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? $this->getModuleStateServiceInterfaceService()), ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()))));
    }

    /**
     * Gets the private 'oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\DispatchLegacyEventsSubscriber
     */
    protected function getOxidEsales_Module_Setup_Service_Eventsubscriber_DispatchLegacyEventsSubscriberService()
    {
        $a = ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? $this->getModuleConfigurationDaoInterfaceService());

        if (isset($this->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'])) {
            return $this->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'];
        }

        return $this->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\DispatchLegacyEventsSubscriber($a, ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ?? ($this->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter())));
    }

    /**
     * Gets the private 'oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\EventLoggingSubscriber
     */
    protected function getOxidEsales_Module_Setup_Service_Eventsubscriber_EventLoggingSubscriberService()
    {
        return $this->privates['oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\EventLoggingSubscriber(($this->services['Psr\\Log\\LoggerInterface'] ?? $this->getLoggerInterfaceService()));
    }

    /**
     * Gets the private 'utility.context.admin_log_file_path' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "utility.context.admin_log_file_path" service is deprecated. Use "OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface" instead.
     */
    protected function getUtility_Context_AdminLogFilePathService()
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "utility.context.admin_log_file_path" service is deprecated. Use "OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface" instead.');

        return ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()))->getAdminLogFilePath();
    }

    /**
     * Gets the private 'utility.context.log_file_path' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "utility.context.log_file_path" service is deprecated. Use "OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface" instead.
     */
    protected function getUtility_Context_LogFilePathService()
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "utility.context.log_file_path" service is deprecated. Use "OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface" instead.');

        return ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()))->getLogFilePath();
    }

    /**
     * Gets the private 'utility.context.log_level' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "utility.context.log_level" service is deprecated. Use "OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface" instead.
     */
    protected function getUtility_Context_LogLevelService()
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "utility.context.log_level" service is deprecated. Use "OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface" instead.');

        return ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ?? ($this->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()))->getLogLevel();
    }

    /**
     * @return array|bool|float|int|string|\UnitEnum|null
     */
    public function getParameter(string $name)
    {
        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        throw new InvalidArgumentException(sprintf('The dynamic parameter "%s" must be defined.', $name));
    }

    protected function getDefaultParameters(): array
    {
        return [
            'oxid_esales.module.metadata.service.metadata_schemata' => [
                '1.0' => [
                    0 => 'id',
                    1 => 'version',
                    2 => 'title',
                    3 => 'description',
                    4 => 'lang',
                    5 => 'thumbnail',
                    6 => 'author',
                    7 => 'url',
                    8 => 'email',
                    9 => 'extend',
                    11 => 'templates',
                    'blocks' => [
                        0 => 'theme',
                        1 => 'template',
                        2 => 'block',
                        3 => 'file',
                        4 => 'position',
                    ],
                    'settings' => [
                        0 => 'group',
                        1 => 'name',
                        2 => 'type',
                        3 => 'value',
                        4 => 'constraints',
                        5 => 'position',
                    ],
                    13 => 'files',
                ],
                '1.1' => [
                    0 => 'id',
                    1 => 'version',
                    2 => 'title',
                    3 => 'description',
                    4 => 'lang',
                    5 => 'thumbnail',
                    6 => 'author',
                    7 => 'url',
                    8 => 'email',
                    9 => 'extend',
                    11 => 'templates',
                    'blocks' => [
                        0 => 'theme',
                        1 => 'template',
                        2 => 'block',
                        3 => 'file',
                        4 => 'position',
                    ],
                    'settings' => [
                        0 => 'group',
                        1 => 'name',
                        2 => 'type',
                        3 => 'value',
                        4 => 'constraints',
                        5 => 'position',
                    ],
                    12 => 'events',
                    13 => 'files',
                ],
                '1.2' => [
                    0 => 'id',
                    1 => 'version',
                    2 => 'title',
                    3 => 'description',
                    4 => 'lang',
                    5 => 'thumbnail',
                    6 => 'author',
                    7 => 'url',
                    8 => 'email',
                    9 => 'extend',
                    11 => 'templates',
                    'blocks' => [
                        0 => 'theme',
                        1 => 'template',
                        2 => 'block',
                        3 => 'file',
                        4 => 'position',
                    ],
                    'settings' => [
                        0 => 'group',
                        1 => 'name',
                        2 => 'type',
                        3 => 'value',
                        4 => 'constraints',
                        5 => 'position',
                    ],
                    12 => 'events',
                    13 => 'files',
                ],
                '2.0' => [
                    0 => 'id',
                    1 => 'version',
                    2 => 'title',
                    3 => 'description',
                    4 => 'lang',
                    5 => 'thumbnail',
                    6 => 'author',
                    7 => 'url',
                    8 => 'email',
                    9 => 'extend',
                    10 => 'controllers',
                    11 => 'templates',
                    'blocks' => [
                        0 => 'theme',
                        1 => 'template',
                        2 => 'block',
                        3 => 'file',
                        4 => 'position',
                    ],
                    'settings' => [
                        0 => 'group',
                        1 => 'name',
                        2 => 'type',
                        3 => 'value',
                        4 => 'constraints',
                        5 => 'position',
                    ],
                    12 => 'events',
                ],
                '2.1' => [
                    0 => 'id',
                    1 => 'version',
                    2 => 'title',
                    3 => 'description',
                    4 => 'lang',
                    5 => 'thumbnail',
                    6 => 'author',
                    7 => 'url',
                    8 => 'email',
                    9 => 'extend',
                    10 => 'controllers',
                    11 => 'templates',
                    'blocks' => [
                        0 => 'theme',
                        1 => 'template',
                        2 => 'block',
                        3 => 'file',
                        4 => 'position',
                    ],
                    'settings' => [
                        0 => 'group',
                        1 => 'name',
                        2 => 'type',
                        3 => 'value',
                        4 => 'constraints',
                        5 => 'position',
                    ],
                    12 => 'events',
                    13 => 'smartyPluginDirectories',
                ],
            ],
            'deprecated' => [
                'package' => 'oxid-esales/oxideshop-ce',
                'version' => '6.5.0',
                'message' => 'The attribute will be removed',
            ],
            'oxid_esales.authentication.service.password_hash.bcrypt.cost' => 10,
            'oxid_esales.authentication.service.password_hash.argon2.memory_cost' => 1024,
            'oxid_esales.authentication.service.password_hash.argon2.time_cost' => 2,
            'oxid_esales.authentication.service.password_hash.argon2.threads' => 2,
            'oxid_esales.theme.admin.name' => 'admin',
            'console.command.ids' => [

            ],
        ];
    }
}
